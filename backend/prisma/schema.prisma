// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      String   @default("customer")
  verified  Boolean  @default(false)
  events    Event[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  lastOtpVerifiedAt DateTime?
}

model Event {
  id                Int         @id @default(autoincrement())
  bookingTypeId     String
  bookingType       BookingType @relation(fields: [bookingTypeId], references: [id])
  start             DateTime
  end               DateTime
  fullName          String
  email             String
  phone             String      @db.VarChar(20)
  userId            Int?     
  user              User?       @relation(fields: [userId], references: [id])
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt

  // Add index for better query performance
  @@index([email])
  @@index([userId])
  @@index([createdAt])
}

model OTP {
  id        Int      @id @default(autoincrement())
  code      String
  email     String
  type      String   // 'auth' | 'booking'
  expiresAt DateTime
  used      Boolean  @default(false)
  
  @@index([email, type])
  @@unique([email, type])
}

model BookingType {
  id          Int    @id @default(autoincrement())
  name        String
  duration    Int
  description String? @db.Text
  color       String?   
}

model Availability {
  day     String @id
  start   String
  end     String
  enabled Boolean @default(true)
}